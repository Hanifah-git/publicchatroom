import{c as L,g as O,d as E,a as Y,b as T,o as A,q as H,e as $,w as F,T as N,f as U}from"./main-a6De-Oec.js";import{t as g,n as v,g as C,a as z,e as R,m as I,b as y}from"./uielement-COWVJc_m.js";/* empty css                */function j(n,t){let e=n,a=t;const r=L(T,"chats");let o=null;const f=async u=>{const c=new Date,l={username:a,room:e,message:u,created_at:N.fromDate(c)};try{return await U(r,l)}catch(i){throw console.log("Error addchat = ",i),i}};o&&o();const s=u=>{o=A(H(r,F("room","==",e),$("created_at")),c=>{c.docChanges().forEach(l=>{l.type==="added"&&u(l.doc.data())})})},d=u=>{e=u},m=u=>{a=u,localStorage.setItem("username",u)};return(()=>{let u=setInterval(async()=>{try{const c=await O(r);if(c.empty){console.log("No message to delete"),clearInterval(u);return}c.forEach(async l=>{await E(Y(T,"chats",l.id))}),console.log("All messages deleted successfully")}catch(c){console.error("Error deleting message :",c)}},15e3)})(),{addChat:f,getChats:s,updateChatroom:d,updateUsername:m}}function x(n,t){const e=+g(n)-+g(t);return e<0?-1:e>0?1:e}function k(n,t,e){const[a,r]=v(e==null?void 0:e.in,n,t),o=a.getFullYear()-r.getFullYear(),f=a.getMonth()-r.getMonth();return o*12+f}function G(n){return t=>{const a=(n?Math[n]:Math.trunc)(t);return a===0?0:a}}function B(n,t){return+g(n)-+g(t)}function J(n,t){const e=g(n,t==null?void 0:t.in);return e.setHours(23,59,59,999),e}function K(n,t){const e=g(n,t==null?void 0:t.in),a=e.getMonth();return e.setFullYear(e.getFullYear(),a+1,0),e.setHours(23,59,59,999),e}function P(n,t){const e=g(n,t==null?void 0:t.in);return+J(e,t)==+K(e,t)}function Q(n,t,e){const[a,r,o]=v(e==null?void 0:e.in,n,n,t),f=x(r,o),s=Math.abs(k(r,o));if(s<1)return 0;r.getMonth()===1&&r.getDate()>27&&r.setDate(30),r.setMonth(r.getMonth()-f*s);let d=x(r,o)===-f;P(a)&&s===1&&x(a,o)===1&&(d=!1);const m=f*(s-+d);return m===0?0:m}function V(n,t,e){const a=B(n,t)/1e3;return G(e==null?void 0:e.roundingMethod)(a)}function W(n,t,e){const a=z(),r=(e==null?void 0:e.locale)??a.locale??R,o=2520,f=x(n,t);if(isNaN(f))throw new RangeError("Invalid time value");const s=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:f}),[d,m]=v(e==null?void 0:e.in,...f>0?[t,n]:[n,t]),h=V(m,d),u=(C(m)-C(d))/1e3,c=Math.round((h-u)/60);let l;if(c<2)return e!=null&&e.includeSeconds?h<5?r.formatDistance("lessThanXSeconds",5,s):h<10?r.formatDistance("lessThanXSeconds",10,s):h<20?r.formatDistance("lessThanXSeconds",20,s):h<40?r.formatDistance("halfAMinute",0,s):h<60?r.formatDistance("lessThanXMinutes",1,s):r.formatDistance("xMinutes",1,s):c===0?r.formatDistance("lessThanXMinutes",1,s):r.formatDistance("xMinutes",c,s);if(c<45)return r.formatDistance("xMinutes",c,s);if(c<90)return r.formatDistance("aboutXHours",1,s);if(c<I){const i=Math.round(c/60);return r.formatDistance("aboutXHours",i,s)}else{if(c<o)return r.formatDistance("xDays",1,s);if(c<y){const i=Math.round(c/I);return r.formatDistance("xDays",i,s)}else if(c<y*2)return l=Math.round(c/y),r.formatDistance("aboutXMonths",l,s)}if(l=Q(m,d),l<12){const i=Math.round(c/y);return r.formatDistance("xMonths",i,s)}else{const i=l%12,S=Math.trunc(l/12);return i<3?r.formatDistance("aboutXYears",S,s):i<9?r.formatDistance("overXYears",S,s):r.formatDistance("almostXYears",S+1,s)}}function Z(n){return{newli:a=>{const r=W(a.created_at.toDate(),new Date,{addSuffix:!0}),o=`
            <li class="shadow rounded-lg px-4 py-2">
                <div class="flex justify-between">
                    <h5 class="text-gray-600 font-medium text-sm">${a.username}</h5>
                    <i class="text-gray-300 text-xs">${r}</i>
                </div>
                <p class="text-gray-600 text-sm">${a.message}</p>
            </li>
        `;n.innerHTML+=o},resetli:()=>{n.innerHTML=""}}}const p=document.querySelector(".chatrooms"),ee=document.querySelector(".chat-ul"),w=document.querySelector(".chat-form"),M=document.querySelector(".user-form"),_=document.querySelector(".msg"),X=document.querySelector(".roomtitle"),q=localStorage.username?localStorage.username:"Guest";M.username.placeholder=`username is ${q}`;const D=j("general",q);X.textContent="General";w.addEventListener("submit",n=>{n.preventDefault();const t=w.message.value.trim();D.addChat(t).then(()=>w.reset()).catch(e=>console.log(e))});M.addEventListener("submit",n=>{n.preventDefault();const t=M.username.value.trim();D.updateUsername(t),M.reset(),_.innerText=`New name is updated to ${t}`,M.username.placeholder=`Username is ${t}`,setTimeout(()=>_.innerText="",3e3)});p.addEventListener("click",n=>{n.preventDefault();const t=n.target.closest("button");if(t){b.resetli();const e=t.getAttribute("id"),a=t.querySelector("h3").innerText;X.textContent=a,D.updateChatroom(e),D.getChats(r=>{b.newli(r)})}});D.getChats(n=>n);const b=Z(ee);D.getChats(n=>{b.newli(n)});
